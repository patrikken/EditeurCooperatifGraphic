package metier;

import java.util.ArrayList;
import java.util.Collection;

import metier.entities.Author;
import metier.entities.Production;
import metier.entities.Project;
import metier.entities.Replicat;
import metier.entities.Symbol;
import metier.entities.Tree;
import metier.entities.View;

public class Compiler {

    public static String compile(Project project) {

        String res = "";
        res+="/******************************************************/\n";
        res+="/**** This document was generated by WDCCoedit 1.0 ****/\n";
        res+="/******************************************************/\n";
        res += "\n";
        res += "project : '" + project.getName() + "' ;";
        res += "\n";
        res += "grammar {";
        res += "\n";
        res += "axiom " + project.getGrammar().getAxiom().getName() + " ;";
        res += "\n";
        res += "symbols { ";
        String allSymbol = "";
        for (Symbol symb : project.getGrammar().getSymbols()) {
            allSymbol += "," + symb.getName();
        }
        allSymbol = allSymbol.substring(1);
        res += allSymbol;
        res += "};";
        res += "\n";
        res += "production {";
        String allProduction = "";
        for (Production prod : project.getGrammar().getProductions()) {
            String rightSide = "";

            for (Symbol symbI : prod.getRightSide()) {
                rightSide += symbI.getName() + " ";
            }
            allProduction += "\n" + prod.getName() + ":" + prod.getLeftSide().getName() + " -> " + rightSide + ";";

        }
        res += allProduction;
        res += "};";
        res += "\n";
        res += "}";
        res += "\n";
        res+="/******************************************************/\n";
        res+="/****                  VIEWS                       ****/\n";
        res+="/******************************************************/\n";
        res += "\n";
        res += "views {";
        String allView = "";
        for (View view : project.getViews()) {
            allView += "\n";
            String viewList = "";
            for (Symbol symb : view.getSymbols()) {
                viewList += "," + symb.getName();
            }
            allView += view.getName() + ": {" + viewList.substring(1) + "};";
        }
        res += allView;
        res += "\n";
        res += "}";
        res += "\n";
        res+="/******************************************************/\n";
        res+="/****                AUTHORS                       ****/\n";
        res+="/******************************************************/\n";
        res += "\n";
        res += "authors {";
        String allAuthor = "";
        for (Author author : project.getAuthors()) {
            allAuthor += Compiler.compile(author) + "; \n";
        }
        res += allAuthor;
        res += "\n";
        res += "}";
        res += "\n";
        res+="/******************************************************/\n";
        res+="/****                INITIAL DOCUMENT              ****/\n";
        res+="/******************************************************/\n";
        res += "\n";
        res += "initial document {";
        res += "\n";
        res += Compiler.compile(project.getInitialDocument());
        res += "\n";
        res += "}";
        res += "\n";
        
        res+="/******************************************************/\n";
        res+="/****                REPLICATS                     ****/\n";
        res+="/******************************************************/\n";
        res += "\n";
        for (Replicat replicat : project.getReplicats()) {
            res += "\n";
            res += Compiler.compile(replicat);
        }
        return res;
    }

    public static String compile(Author author) {
        String res = "";
        res += author.getId() + ": [ \n";
        res += "name:'" + author.getName() + "', \n";
        res += "view:" + author.getView().getName() + ", \n";
        res += "site:'" + author.getSite() + "'\n";
        res += "]";

        return res;
    }

    public static String compile(Tree tree) {

        String res = "";
        ArrayList<String> printer = new ArrayList<String>();
        Compiler.process(tree, null, printer);
        for (String st : printer) {
            res += " " + st;
        }

        return res;
    }

    public static void process(Tree tree, Tree parent, Collection<String> printer) {
        if (tree.getSuns().isEmpty()) {
            if (tree.isBud()) {
                printer.add("bud(" + tree.getSymbol().getName() + ")");

            } else {
                printer.add(tree.getSymbol().getName());
            }
        } else {
            if (parent != null) {
                printer.add("[");
            }
            printer.add(tree.getSymbol().getName());
            printer.add("(");
            for (Tree sun : tree.getSuns()) {
                process(sun, tree, printer);
            }
            printer.add(")");
            if (parent != null) {
                printer.add("]");
            }
        }
    }

    public static String compile(Replicat replicat) {
        String res = "";
        res += "replicat R" + replicat.getAuthor().getId() + "{";
        res += "\n author:" + replicat.getAuthor().getId() + ";";
        res += "\n document {";
        res += "\n";
        res += Compiler.compile(replicat.getTree());
        res += "\n";
        res += "}";
        res += "\n";
        res += "}";

        return res;
    }
}
