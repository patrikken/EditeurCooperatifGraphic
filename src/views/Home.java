/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

//import de.javasoft.plaf.synthetica.SyntheticaWhiteVisionLookAndFeel;
//import de.javasoft.plaf.synthetica.SyntheticaOrangeMetallicLookAndFeel;
import basictest.BaseTest;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import layout.StructuredLayout;
import metier.ToolKit;
import metier.entities.Author;
import metier.entities.Production;
import metier.entities.Project;
import metier.entities.Symbol;
import metier.entities.Tree;
import metier.entities.View;
import metier.Compiler;
import metier.entities.Grammar;

/**
 *
 * @author patrik
 */
public class Home extends javax.swing.JFrame {

    private Project Currentprojet;

    private boolean edited;

    private StructuredLayout structuredLayout;

    /**
     * Creates new form Home
     *
     * @throws javax.swing.UnsupportedLookAndFeelException
     */
    public Home() throws UnsupportedLookAndFeelException {
        try {
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaWhiteVisionLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        edited = false;
        structuredLayout = new StructuredLayout();
        jTree1.setModel(null);
        jTree1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                doMouseClicked(me);
            }
        });
    //Currentprojet = BaseTest.createTestProject() ;
        Currentprojet = null ;
        //this Jbutton help to save a projet
//        if (Currentprojet.getLocation().equals("")) {
//            jButton2.setEnabled(true);
//        } else {
//            jButton2.setEnabled(false);
//        }
        jTree1.setCellRenderer(new CustumTreeCellRenderer());
        updateJTree(Currentprojet);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();

        jMenu4.setText("jMenu4");

        jMenuItem12.setText("jMenuItem12");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editeur graphique Workflow d'edition coopératif");

        jToolBar1.setBackground(new java.awt.Color(0, 126, 255));
        jToolBar1.setRollover(true);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/newprj_wiz.png"))); // NOI18N
        jButton4.setToolTipText("Nouveau projet (Ctrl+N)");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/prj_obj.png"))); // NOI18N
        jButton1.setToolTipText("Ouvrir un projet (Ctrl+O)");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/undo_edit1.png"))); // NOI18N
        jButton5.setToolTipText("Annuler");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/redo_edit1.png"))); // NOI18N
        jButton3.setToolTipText("retour");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton3);
        jToolBar1.add(jSeparator5);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/save_edit.png"))); // NOI18N
        jButton2.setToolTipText("Sauvegarder (Ctrl+S)");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/run_exc.png"))); // NOI18N
        jButton6.setToolTipText("Exécuter");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);
        jToolBar1.add(jSeparator6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/user-plus-icon.png"))); // NOI18N
        jButton7.setToolTipText("Ajouter un auteur");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/view.png"))); // NOI18N
        jButton8.setToolTipText("Ajouter une vue");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);
        jToolBar1.add(jSeparator7);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/defaultview_misc.png"))); // NOI18N
        jButton9.setToolTipText("Vue en page");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/zoom-in.png"))); // NOI18N
        jButton10.setToolTipText("Zoom +");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton10);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/zoom-out.png"))); // NOI18N
        jButton11.setToolTipText("Zoom -");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton11);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 463, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel2);

        jMenu1.setText("File");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Nouveau projet ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Ouvrir un projet");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);
        jMenu1.add(jSeparator1);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Enregistrer");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/saveall_edit.png"))); // NOI18N
        jMenuItem7.setText("Enregistrer Sous...");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);
        jMenu1.add(jSeparator2);

        jMenu5.setText("Exporter le projet");

        jMenuItem8.setText("Sous forme d'image");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem8);

        jMenu1.add(jMenu5);
        jMenu1.add(jSeparator3);

        jMenuItem4.setText("Quitter");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Options");

        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/author.png"))); // NOI18N
        jMenuItem9.setText("Ajouter un auteur");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/img/view.png"))); // NOI18N
        jMenuItem10.setText("Ajouter une vue");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenu2.setText("Grammaire");

        jMenuItem2.setText("Gérer les symboles");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem15.setText("Gérer les productions");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenu3.add(jMenu2);

        jMenuBar1.add(jMenu3);

        jMenu6.setText("Aide ?");

        jMenuItem13.setText("Documentation");
        jMenu6.add(jMenuItem13);

        jMenuItem14.setText("A propos");
        jMenu6.add(jMenuItem14);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //using to create an projet
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        newProject();
    }//GEN-LAST:event_jButton4ActionPerformed

    /*  
     *   we using this method to take an click event in the jTree 
     */
    void doMouseClicked(MouseEvent me) {
        TreePath tp = jTree1.getPathForLocation(me.getX(), me.getY());
        if (tp != null) {
            if (tp.getLastPathComponent().toString().equals("+ Ajouter un auteur")) {
                addAuthor();
            } else {
                if (tp.getLastPathComponent().toString().equals("+ Ajouter une vue")) {
                    addView();
                } else {
                    if (tp.getLastPathComponent().toString().equals("Gérer les symboles")) {
                        addSymbole();
                    } else {
                        if (tp.getLastPathComponent().toString().equals("+ Ajouter une production")) {
                            addProduction();
                        }
                    }
                }
            }
        }
    }

    /*  
     *   we using this method to open an projet 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        openProject();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        saveCurrentProjet();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        addAuthor();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        openProject();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        saveCurrentProjet();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        saveCurrentProjetAs();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        newProject();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        addAuthor();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        addView();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        addView();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        PrintWriter pw = null;
        try {
            String result = Compiler.compile(Currentprojet);
            pw = new PrintWriter(new FileOutputStream(Currentprojet.getLocation() + "/sortie.coedit"));
            pw.println(result);
            pw.flush();
            JOptionPane.showMessageDialog(this, "Compilation effectuée avec succès. \n fichier du DSL:" + Currentprojet.getLocation() + "/sortie.coedit", "Compilation terminer", JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            pw.close();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        structuredLayout.zoomInt();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        structuredLayout.zoomOut();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        structuredLayout.setPageView(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        addSymbole();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        addProduction();
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
       structuredLayout.exportInImage(this);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Home().setVisible(true);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void updateJTree(Project p) {
        if (p == null) {
            return;
        }
//        ArrayList<Symbol> symbolsGram = new ArrayList();
//        symbolsGram.add(new Symbol("A"));
//        symbolsGram.add(new Symbol("B"));
//        symbolsGram.add(new Symbol("C"));
//        symbolsGram.add(new Symbol("D"));
//        symbolsGram.add(new Symbol("F"));
//        symbolsGram.add(new Symbol("eps"));
//        Currentprojet.getGrammar().setSymbols(symbolsGram);
        /* we define the parent node*/
        DefaultMutableTreeNode racine = new DefaultMutableTreeNode(p.getName());

        // parent Node of the grammar
        DefaultMutableTreeNode grammarNode = new DefaultMutableTreeNode("Grammaire");
        DefaultMutableTreeNode symbolesNode = new DefaultMutableTreeNode("Symboles");
        if (Currentprojet.getGrammar().getAxiom() != null) {
            grammarNode.add(new DefaultMutableTreeNode("Axiome :" + Currentprojet.getGrammar().getAxiom().getName()));
        }
        for (Symbol sym : Currentprojet.getGrammar().getSymbols()) {
            symbolesNode.add(new DefaultMutableTreeNode(sym.getName()));
        }

        if (Currentprojet.getGrammar().getSymbols().isEmpty()) {
            symbolesNode.add(new DefaultMutableTreeNode("Gérer les symboles"));
        }

        DefaultMutableTreeNode viewsNode = new DefaultMutableTreeNode("Vues");
        for (View view : Currentprojet.getViews()) {
            viewsNode.add(new DefaultMutableTreeNode(view.getName()));
        }
        DefaultMutableTreeNode addviewsNode = new DefaultMutableTreeNode("+ Ajouter une vue");
        viewsNode.add(addviewsNode);

        DefaultMutableTreeNode authorNode = new DefaultMutableTreeNode("Auteurs");
        for (Author author : Currentprojet.getAuthors()) {
            authorNode.add(new DefaultMutableTreeNode(author.getName() + "(" + author.getView().getName() + ")"));
        }
        DefaultMutableTreeNode addAuthorNode = new DefaultMutableTreeNode("+ Ajouter un auteur");
        authorNode.add(addAuthorNode);

        DefaultMutableTreeNode productionNode = new DefaultMutableTreeNode("Productions");

        for (Production prod : Currentprojet.getGrammar().getProductions()) {
            if (prod.getRightSide().isEmpty()) {
                productionNode.add(new DefaultMutableTreeNode(prod.getLeftSide().getName() + " -> ε"));
            } else {
                productionNode.add(new DefaultMutableTreeNode(prod.getLeftSide().getName() + "->" + ToolKit.transformToString(prod.getRightSide(), " ")));
            }
        }

        productionNode.add(new DefaultMutableTreeNode("+ Ajouter une production"));

        grammarNode.add(symbolesNode);
        grammarNode.add(productionNode);

        racine.add(grammarNode);
        racine.add(viewsNode);
        racine.add(authorNode);
        jTree1.setModel(new DefaultTreeModel(racine));
        jTree1.expandRow(3);
        jTree1.expandRow(4);
        jTree1.expandRow(1);
        jTree1.expandRow(2);
        structuredLayout.dispose(jPanel2, Currentprojet);

    }

    /* 
     * Methode to add and autor
     */
    private void addSymbole() {
        if (Currentprojet == null) {
            return;
        }
        SymboleJDialog symboleJDialog = new SymboleJDialog(this, true);
        symboleJDialog.setVisible(true);
        if (symboleJDialog.isFinish()) {
            Currentprojet.getGrammar().setSymbols(symboleJDialog.getSymbols());
            Currentprojet.getGrammar().setAxiom(symboleJDialog.getAxiom());
            Tree initDoc= new Tree();
            initDoc.setSymbol(Currentprojet.getGrammar().getAxiom());
            Currentprojet.setInitialDocument(initDoc);
            updateJTree(Currentprojet);
            currenProjetEdited();
        }
    }

    /* 
     * Methode to add and autor
     */
    private void addAuthor() {
        if (Currentprojet == null) {
            return;
        }
        NewAuthorDialog authorDialog = new NewAuthorDialog(this, true, Currentprojet.getViews());
        authorDialog.setVisible(true);
        if (authorDialog.isFinish()) {
            Author author = new Author();
            author.setName(authorDialog.getNom());
            author.setSite(authorDialog.getSite());
            int m = Currentprojet.getViews().indexOf(new View(authorDialog.getView()));
            author.setView(Currentprojet.getViews().get(m));
            int authorCompt=Currentprojet.getAuthors().size();
            authorCompt++;
            author.setId("Author"+authorCompt);
            Currentprojet.getAuthors().add(author);
            Currentprojet.createReplicatForAuthor(author);
            updateJTree(Currentprojet);
            currenProjetEdited();
        }
    }

    /* 
     * Methode to add and autor
     */
    private void addView() {
        if (Currentprojet == null) {
            return;
        }
        NewViewDialog viewDialog = new NewViewDialog(this, true, Currentprojet.getGrammar().getSymbols());
        viewDialog.setVisible(true);
        if (viewDialog.isFinish()) {
            View view = new View();
            view.setName(viewDialog.getNom());
            view.setSymbols(viewDialog.getSymbols());
            Currentprojet.getViews().add(view);
            updateJTree(Currentprojet);
            currenProjetEdited();
        }
    }

    private void addProduction() {
        if (Currentprojet == null) {
            return;
        }
        ProductionJDialog prodDialog = new ProductionJDialog(this, true, Currentprojet.getGrammar().getSymbols());
        prodDialog.setVisible(true);
        if (prodDialog.isFinish()) {
            Production prod = prodDialog.getProd();
            int id = Currentprojet.getGrammar().getProductions().size();
            id++;
            String name = "P" + id;
            prod.setName(name);
            Currentprojet.getGrammar().getProductions().add(prod);
            updateJTree(Currentprojet);
            currenProjetEdited();
        }
    }

    /* 
     * this methode help to know when we edited a project in this case we can save it 
     */
    public void currenProjetEdited() {
        edited = true;
        jButton2.setEnabled(true);
    }

    /* 
     * this methode help to open and existing project 
     */
    private void newProject() {
        NewPoject newproject = new NewPoject(this, true);
        newproject.setVisible(true);
        if (newproject.isFinish()) {
            Currentprojet = new Project();
            Currentprojet.setName(newproject.getNom());
            Currentprojet.setLocation(newproject.getPath());
            updateJTree(Currentprojet);
            saveCurrentProjet();
            //addAuthor();
        }
    }

    /* 
     * this methode help to open and existing project 
     */
    public void openProject() {
        FileInputStream fin = null;
        String file;
        JFileChooser choix;
        choix = new JFileChooser();
        choix.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        int retour = choix.showOpenDialog(this);
        if (retour == JFileChooser.APPROVE_OPTION) {
            file = choix.getSelectedFile().getAbsolutePath();
            try {
                fin = new FileInputStream(file);
                ObjectInputStream ois = new ObjectInputStream(fin);
                Currentprojet = (Project) ois.readObject();
                updateJTree(Currentprojet);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Le fichier n'existe pas !", "Entré erroner", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Le fichier est incorrect", "Entré erroner", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Le fichier est incorrect", "Entré erroner", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fin.close();
                } catch (IOException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public void saveCurrentProjet() {
        if (Currentprojet == null) {
            return;
        }
        if (Currentprojet.getLocation().equals("")) {
            saveCurrentProjetAs();
            return;
        }
        try {
            String name = Currentprojet.getLocation() + "/" + Currentprojet.getName() + ".wdc";
            FileOutputStream fos = new FileOutputStream(name);
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(Currentprojet);
            oos.flush();
            oos.close();
            JOptionPane.showMessageDialog(this, name);
            edited = false;
            jButton2.setEnabled(false);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void saveCurrentProjetAs() {
        if (Currentprojet == null) {
            return;
        }
        JFileChooser choix;
        choix = new JFileChooser();
        choix.setDialogTitle("Enregistrer sous");
        choix.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        int retour = choix.showOpenDialog(this);
        if (retour == JFileChooser.APPROVE_OPTION) {
            try {
                String name = choix.getSelectedFile().getAbsolutePath() + "/" + Currentprojet.getName() + ".wdc";
                Currentprojet.setLocation(choix.getSelectedFile().getAbsolutePath());
                FileOutputStream fos = new FileOutputStream(name);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Currentprojet);
                oos.flush();
                oos.close();
                JOptionPane.showMessageDialog(this, name);
                edited = false;
                jButton2.setEnabled(false);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
